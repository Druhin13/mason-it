/**
 * @file Mason-it - CSS Grid to Masonry Layout Converter
 * @author Druhin13
 * @version 1.0.1
 * @license MIT
 * @description A lightweight, dependency-free library that transforms CSS Grid into Masonry layout
 * @copyright 2025 Druhin13
 */
/*!
 * Mason-it v1.0.1
 * ┌─┐┌─┐┌─┐┌─┐┌┐┌   ┬┌┬┐
 * │││├─┤└─┐│ ││││───│ │
 * └┴┘┴ ┴└─┘└─┘┘└┘   ┴ ┴
 *
 * CSS grid to masonry layout converter
 * Lightweight, dependency-free, and blazing fast!
 *
 * Copyright (c) 2025 Druhin13
 * https://github.com/Druhin13/mason-it
 * Released under the MIT License
 *
 */
!function(){if("function"==typeof window.getComputedStyle&&"function"==typeof window.requestAnimationFrame){var e="┌───┐\n│o‿o│\n└───┘",n="[■o‿o■]",t=new Map,o=!1,r="1.0.1",i=new Set;window.MasonIt={init:function(e,n){s("📌 init() called with",e,n);var t=g(e);s("Found",t.length,"elements to Mason-it");for(var o=0;o<t.length;o++)u(t[o],n||{});return this},refresh:function(e){if(s("🔄 refresh() called with",e||"all grids"),e)for(var n=g(e),o=0;o<n.length;o++)t.has(n[o])?d(n[o]):s("Skipping refresh for element not in MasonItRegistry:",n[o]);else f();return this},reload:function(e){return s("⚠️ reload() is deprecated, please use refresh() instead"),this.refresh(e)},destroy:function(e){s("❌ destroy() called with",e||"all grids");return(e?g(e):Array.from(t.keys())).forEach((function(e){!function(e){try{var n=t.get(e);if(!n)return void s("Grid not Mason-ited, nothing to teardown",e);s("Un-Mason-iting grid",e),clearTimeout(n.timeout),clearInterval(n.interval),n.observer&&n.observer.disconnect(),i.delete(e),d(e),t.delete(e),e.removeAttribute("data-mason-it-active"),s("Grid successfully un-Mason-ited")}catch(e){l("teardown",e)}}(e)})),this},debug:function(n){return o=!!n,console&&console.log&&console.log("\n"+e+"\n\nMason says: Debug mode "+(o?"enabled 🔍":"disabled 🔒")),this},version:function(){return r},count:function(){return t.size}},"loading"===document.readyState?document.addEventListener("DOMContentLoaded",c):c();var a=!1;window.addEventListener("resize",(function(){a||(a=!0,window.requestAnimationFrame((function(){s("🔄 Window resize detected - refreshing all Mason-it grids"),f(),a=!1})))})),window.addEventListener("refresh:mason-it",(function(){s("🔄 Custom refresh event 'refresh:mason-it' received"),f()})),window.addEventListener("reload:mason-it",(function(){s("⚠️ 'reload:mason-it' event is deprecated, use 'refresh:mason-it'"),f()})),"undefined"!=typeof module&&module.exports?(module.exports=window.MasonIt,"undefined"!=typeof window&&(window.MasonIt=window.MasonIt)):"function"==typeof define&&define.amd&&define([],(function(){return window.MasonIt})),console&&console.log&&console.log(e+"\n\nMason-it v"+r+" initialized!\nMade with ❤️ by Druhin13\n")}else console.warn("┌───┐\n│o‿o│ Mason-it: Your browser lacks required modern features. Mason-it disabled.\n└───┘");function s(){if(o&&console&&console.log){var e=[n+" Mason:"].concat(Array.prototype.slice.call(arguments));console.log.apply(console,e)}}function l(e,t){o&&console&&console.error&&console.error(n+" Mason Error ["+e+"]:",t)}function d(e){if(!t.has(e)&&!document.body.contains(e))return s("Skipping schedule arrange for element not in registry or DOM:",e),void i.delete(e);i.has(e)||(i.add(e),window.requestAnimationFrame((function(){t.has(e)||e.closest('[data-mason-it-active="true"]')?function(e){try{s("Arranging masonry layout for",e);var n=parseFloat(getComputedStyle(e).gap)||0;Array.prototype.filter.call(e.children,(function(e){return 1===e.nodeType&&"TEMPLATE"!==e.tagName})).forEach((function(e){e.style.removeProperty("margin-top")}));var t=Array.prototype.filter.call(e.children,(function(e){return 1===e.nodeType&&"TEMPLATE"!==e.tagName&&"none"!==getComputedStyle(e).display}));if(0===t.length)return void s("No visible items to arrange in",e);var o=getComputedStyle(e).gridTemplateColumns.split(" ").length;if(o<2||t.length<=o)return void s("Not enough columns ("+o+") or visible items ("+t.length+") for masonry effect on",e);for(var r=o;r<t.length;r++){var i=t[r],a=t[r-o];if(a){var d=i.getBoundingClientRect(),u=a.getBoundingClientRect(),c=d.top-u.bottom;if(c!==n){var f=c-n;if(!isFinite(f)){s("Warning: Calculated non-finite margin-top for item:",i);continue}if(Math.abs(f)>2*window.innerHeight&&window.innerHeight>0){s("Warning: Calculated excessively large margin-top ("+f+"px) for item:",i);continue}i.style.marginTop="-"+f+"px"}}}s("Mason-it layout arranged successfully for",e,"✓")}catch(e){l("arrange",e)}}(e):s("Skipping arrange for element no longer active/valid in rAF callback:",e),i.delete(e)})))}function u(e,n){try{if(t.has(e))return void s("Grid already Mason-ited, skipping",e);s("Mason-iting grid",e,"with options",n);var o=e.getAttribute("data-mason-it")||"",r=/mason-delay:\{(\d+)\}/.exec(o),i=/mason-poll-interval:\{(\d+)\}/.exec(o),a=n&&null!=n.masonDelay?n.masonDelay:r?+r[1]:0,u=n&&null!=n.masonPollInterval?n.masonPollInterval:i?+i[1]:0,c={el:e,timeout:null,interval:null,observer:null,created:(new Date).toISOString()};a?(s("Setting initial layout delay for",a,"ms"),c.timeout=setTimeout((function(){d(e)}),a)):d(e),u&&(s("Setting poll interval for",u,"ms"),c.interval=setInterval((function(){d(e)}),u)),"function"==typeof MutationObserver&&(s("Setting up Mason-it observer for dynamic content"),c.observer=new MutationObserver((function(n){for(var t of n)if("childList"===t.type)return s("MutationObserver detected childList change, scheduling arrange for",e),void d(e)})),c.observer.observe(e,{childList:!0})),t.set(e,c),e.setAttribute("data-mason-it-active","true")}catch(e){l("setup",e)}}function c(){try{s("Auto-setting up all grids with [data-mason-it]");var e=document.querySelectorAll("[data-mason-it]:not([data-mason-it-active='true'])");s("Found",e.length,"grids to Mason-it");for(var n=0;n<e.length;n++)u(e[n],{})}catch(e){l("auto-setup",e)}}function f(){s("Scheduling refresh for all "+t.size+" Mason-ited grids"),t.forEach((function(e){d(e.el)}))}function g(e){try{return"string"==typeof e?document.querySelectorAll(e):e instanceof Element?[e]:NodeList.prototype.isPrototypeOf(e)||Array.isArray(e)?e:[]}catch(e){return l("find-elements",e),[]}}}();